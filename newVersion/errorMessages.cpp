#include <iostream>
#include <stdlib.h>
#include "errorMessages.h"

using std::endl; using std::cout; using std::string;



std::string getEmptyMessage() {
	string errorMessage =
			"No range of taps' or single taps specified! Program Terminated \n "
			"Author Avraham Kahan and Mikey Schwartz (avrahamkahan123@gmail.com)\n"
			"Usage:\n $ registerSequences {-n | -h} [number] {optional arguments} \n"
			"Optional Arguments: \n"
			"-l for lower bound. ex. -l 12 -h 100 \n"
			"-p for parralel computation. Default = false\n"
			"-f for file output. Default = false\n";
	return errorMessage;
}

void offerHelp() {
	cout << "type 'registerSequences --help' for help" << endl;
}


void helpMessage() {
	string help = "Author Avraham Kahan and Mikey Schwartz (avrahamkahan123@gmail.com)\n"
			"Usage:\n $ registerSequences {-n | -h} [number] {optional arguments} \n"
			"Optional Arguments: \n"
			"-l for lower bound. ex. -l 12 -h 100 \n"
			"-p for parralel computation. Default = false\n"
			"-f for file output. Default = false\n";
	cout << "Welcome to registerSequences! \n This program outputs the number of sequences generated by taps or range of taps' for a linear feedback register" << endl;
	cout << help << endl;
	exit(-1);
}

void syntaxError() {
	cout << "Improper syntax for arguments" << endl;
	offerHelp();
	exit(-1);
}

void invalidArgumentError(char argument) {
	cout << "Invalid Argument: '" << argument << "' " << endl;
	offerHelp();
	exit(-1);
}

void nonIntegerParam() {
	cout << "Non-integer value supplied to integer field" << endl;
	offerHelp();
	exit(-1);
}

void negativeBoundError() {
	cout << "Negative bound provided" << endl;
	offerHelp();
	exit(-1);
}

void noUpperBoundError() {
	cout << "No upper bound or specific seed provided. One of the two must be provided" << endl;
	offerHelp();
	exit(-1);
}

void upperLowerError() {
	cout << "provided lower bound greater or equal to provided upper bound" << endl;
	offerHelp();
	exit(-1);
}

void invalidIntegerCombinationError() {
	cout << "Invalid combination of integer options. Please remember that if the -n field is set, -h and -l cannot also be set" << endl;
	offerHelp();
	exit(-1);
}

